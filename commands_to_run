### step0. submit_fit_cmd
code=conserve
# or raw

rdata=sif179_100tree_batch1_diet6
# or bat624_100tree_batch1

f=trees_${code}
mkdir ${f}
batch=1
for i in {1..100}
do
tree_id=$(sed -n ${i}p tree100_batch${batch}.txt)
mkdir ${f}/tree_${tree_id}
sed "s/arg1/${batch}/; s/arg2/${i}/; s/arg7/${code}/; s/arg8/${rdata}/" 0.fit_MCMCglmm_m2thin50f1.sh \
> ${f}/tree_${tree_id}/0.fit_MCMCglmm_m2thin50f1.sh
cd ${f}/tree_${tree_id}
sbatch 0.fit_MCMCglmm_m2thin50f1.sh
cd ../../
done


### 0.fit_MCMCglmm_m2thin50f1.sh
#!/bin/sh
#SBATCH --job-name=mcmc
#SBATCH --time=10:00:00
#SBATCH --nodes=1
#SBATCH --cpus-per-task=1
#SBATCH --mem-per-cpu=10g
#SBATCH --array=1-10
#SBATCH --mail-user=xueling.yi@senckenberg.de
#SBATCH --mail-type=END,FAIL

# array index is used as the chain ID
module unload R/4.0.3
module load R/4.4.1

batch=arg1
index=arg2
nitt=2000000
thin=50
fix=1
diet_coding=arg7
## raw, conserve
rdata=arg8

Rscript ../../vertlife_MCMC_diet6.R ${batch} ${index} ${SLURM_ARRAY_TASK_ID} ${nitt} ${thin} ${fix} ${diet_coding} ${rdata}

### step1. check convergence
module unload R/4.0.3
module load R/4.4.1

batch=1
diet=6

code=raw
#code=conserve
f=trees_${code}

## plot trace of the first tree
i=1
tree_id=$(sed -n ${i}p tree100_batch${batch}.txt)
cd ${f}/tree_${tree_id}
echo ${f}/tree_${tree_id} >> ../../check_ESS_PSRF.log
Rscript ../../../../check_ESS_PSRF_modified_delta.R ${diet} T >> ../../check_ESS_PSRF.log
cd ../../
echo >> check_ESS_PSRF.log

## no plot of the rest trees
for i in {2..100}
do
tree_id=$(sed -n ${i}p tree100_batch${batch}.txt)
echo ${f}/tree_${tree_id} >> check_ESS_PSRF.log
cd ${f}/tree_${tree_id}
Rscript ../../../../check_ESS_PSRF_modified_delta.R ${diet} F >> ../../check_ESS_PSRF.log
cd ../../
echo >> check_ESS_PSRF.log
done


### step2. summary results of 10 chains per tree
#!/bin/sh
#SBATCH --job-name=summary
#SBATCH --time=4:00:00
#SBATCH --nodes=1
#SBATCH --cpus-per-task=1
#SBATCH --mem-per-cpu=8g
#SBATCH --array=1-100
#SBATCH --mail-user=xueling.yi@senckenberg.de
#SBATCH --mail-type=END,FAIL

# array index is used as the tree ID
## needed larger mem because estimates from all 10 chains will be stored
module unload R/4.0.3
module load R/4.4.1

batch=1
tree_id=$(sed -n ${SLURM_ARRAY_TASK_ID}p tree100_batch${batch}.txt)
rdata=sif179_100tree_batch1_diet6

for code in raw conserve
do
cd trees_${code}/tree_${tree_id}
Rscript ../../vertlife_extract_threshold_probability.R ${batch} ${SLURM_ARRAY_TASK_ID} ${rdata} 
cd ../../
done


### step3. aggregate summarized results across 100 trees
#!/bin/sh
#SBATCH --job-name=summary
#SBATCH --time=1:00:00
#SBATCH --nodes=1
#SBATCH --cpus-per-task=1
#SBATCH --mem-per-cpu=2g
#SBATCH --mail-user=xueling.yi@senckenberg.de
#SBATCH --mail-type=END,FAIL

module unload R/4.0.3
module load R/4.4.1

batch=1
rdata=sif179_100tree_batch1_diet6
id_start=1
id_end=100

for code in raw conserve
do
Rscript aggregate.R ${batch} ${rdata} ${id_start} ${id_end} ${code}
#Rscript aggregate_genus.R ${batch} ${id_start} ${id_end} ${code}
done

